name: Sync Server to Deployment Repo

on:
  push:
    branches: [main]
    paths:
      - 'apps/server/**'

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: monorepo

      - uses: actions/checkout@v3
        with:
          repository: mattburnett-repo/klimametrix-api
          path: deploy-repo
          token: ${{ secrets.DEPLOY_PAT }}

      - name: Sync Files
        run: |
          # Clean deployment repo
          cd deploy-repo
          find . -not -path './.git/*' -not -name '.git' -delete

          # Copy essential files
          cp -r ../monorepo/apps/server/src ./src
          cp ../monorepo/apps/server/tsconfig.json ./

          # Copy and modify package.json
          cp ../monorepo/apps/server/package.json ./
          
          # Remove swagger from package.json
          sed -i '/"@nestjs\/swagger"/d' package.json
          
          # Clean up Swagger from main.ts
          sed -i '/import.*swagger/d' ./src/main.ts
          sed -i '/SwaggerModule/d' ./src/main.ts
          sed -i '/DocumentBuilder/d' ./src/main.ts
          sed -i '/setTitle/d' ./src/main.ts
          sed -i '/setDescription/d' ./src/main.ts
          sed -i '/setVersion/d' ./src/main.ts
          sed -i '/addTag/d' ./src/main.ts
          sed -i '/createDocument/d' ./src/main.ts
          sed -i '/setup/d' ./src/main.ts

          # Clean up Swagger from DTOs
          find ./src -type f -name "*.dto.ts" -exec sed -i '/@ApiProperty/d' {} +
          
          # Clean up Swagger from controllers
          find ./src -type f -name "*.controller.ts" -exec sed -i '/@ApiTags/d' {} +
          find ./src -type f -name "*.controller.ts" -exec sed -i '/@ApiOperation/d' {} +
          find ./src -type f -name "*.controller.ts" -exec sed -i '/@ApiResponse/d' {} +

          # Create clean Dockerfile
          cat << 'EOF' > Dockerfile
          FROM node:18

          WORKDIR /app

          COPY package.json ./
          RUN npm install

          COPY . .
          RUN npm run build

          EXPOSE 3000
          CMD ["npm", "run", "start:prod"]
          EOF

          # Commit and push if there are changes
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add -A
          git diff --quiet && git diff --staged --quiet || (git commit -m "Sync from monorepo" && git push)